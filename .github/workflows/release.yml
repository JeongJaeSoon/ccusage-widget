name: Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize]
    paths:
      - '.github/workflows/release.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.3.2)'
        required: true
        type: string

jobs:
  release:
    runs-on: macos-latest
    permissions:
      contents: write  # For updating release and committing to main
      packages: write  # For npm publish

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Update package.json version
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          VERSION="v1.3.99-test"
          echo "üß™ PR Test Mode: Using test version $VERSION"
        else
          VERSION="${{ github.ref_name || github.event.inputs.version }}"
        fi
        npm version $VERSION --no-git-tag-version --allow-same-version

    - name: Install dependencies
      run: npm ci

    - name: Run lint checks
      run: npm run lint

    - name: Run type checks
      run: npm run typecheck

    - name: Run tests
      run: npm test

    - name: Build application
      run: npm run build

    - name: Verify build output
      run: |
        echo "üì¶ Verifying build output..."
        if [ ! -d "dist" ]; then
          echo "‚ùå Build directory 'dist' not found"
          exit 1
        fi
        if [ ! -f "dist/main.js" ]; then
          echo "‚ùå Main entry point 'dist/main.js' not found"
          exit 1
        fi
        echo "‚úÖ Build output verified successfully"

    - name: Create distributable
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test global installation
      run: |
        echo "üß™ Testing global installation..."
        npm pack
        npm install -g *.tgz
        # Test if the command is available
        which ccusage-widget
        # Test help command
        ccusage-widget --help
        # Clean up
        npm uninstall -g ccusage-widget
        rm *.tgz
        echo "‚úÖ Global installation test passed"

    - name: Verify package contents
      run: |
        echo "üìã Verifying package contents..."
        npm pack --dry-run
        echo "‚úÖ Package contents verified"

    - name: Check npm publish requirements
      run: |
        echo "üîç Checking npm publish requirements..."
        # Version is already updated by npm version command above
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "‚úÖ Publishing version: v$PACKAGE_VERSION"
        
        # Verify npm automation token is set
        if [ -z "${{ secrets.NPM_AUTOMATION_TOKEN }}" ]; then
          echo "‚ö†Ô∏è  Warning: NPM_AUTOMATION_TOKEN secret is not set (required for 2FA-enabled accounts)"
        fi
        echo "‚úÖ All npm publish requirements met"

    - name: Configure npm authentication
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTOMATION_TOKEN }}" > ~/.npmrc
        echo "registry=https://registry.npmjs.org/" >> ~/.npmrc

    - name: Publish to npm
      if: github.event_name != 'pull_request'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN }}

    - name: Upload Release Assets
      if: github.event_name != 'pull_request'
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: PR Test Summary
      if: github.event_name == 'pull_request'
      run: |
        echo "‚úÖ PR Test Mode: All checks passed!"
        echo "üìã Test Summary:"
        echo "  - Build: ‚úÖ"
        echo "  - Tests: ‚úÖ"
        echo "  - Lint: ‚úÖ"
        echo "  - Type Check: ‚úÖ"
        echo "  - Package: ‚úÖ"
        echo ""
        echo "‚ö†Ô∏è  Note: npm publish and release upload were skipped in PR test mode"